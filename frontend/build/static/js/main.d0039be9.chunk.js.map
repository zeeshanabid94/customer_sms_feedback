{"version":3,"sources":["components/appbar/EmotiveAppBar.jsx","components/forms/CustomerForm.jsx","components/drawer/Drawer.jsx","components/conversation/Conversation.jsx","App.js","serviceWorker.js","index.js"],"names":["EmotiveAppBar","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","children","react_default","a","createElement","Toolbar_default","className","classNames","classes","logo","height","width","src","index_es","icon","AccountCircle_default","AppBar_default","root","React","Component","withStyles","background","zIndex","display","textAlign","marginBottom","float","styles","form","paddingLeft","label","position","margin","label_text","marginLeft","input","border","borderWidth","borderRadius","borderColor","button_group","paddingRight","button","color","marginRight","cursor","textTransform","button_selected","&:hover","button_hover","CustomerForm","_this","state","product","customerName","phoneNumber","onProductSelect","bind","assertThisInitialized","onCustomerNameChanged","onPhoneNumberChanged","event","newState","target","value","setState","innerText","toLowerCase","_this2","FormGroup_default","InputLabel_default","shrink","required","Icon_default","Phone_default","style","Input_default","onChange","disableUnderline","id","type","name","placeholder","ShoppingBasket_default","row","Button_default","disableRipple","variant","onClick","Person_default","onSubmit","drawer","drawerPaper","paddingTop","boxShadow","EmotiveDrawer","es6","Drawer_default","open","paper","withCookies","mainStyle","divStyle","flexGrow","marginTop","padding","messageStyle","paddingBottom","messageTextStyle","messageEditStyle","Conversation","automatedDisabled","positiveDisabled","negativeDisabled","editAutomatedResponse","editNegativeResponse","editPositiveResponse","messageElement","message","automatedResponse","disabled","buttonCallback","textareaCallback","onChangeAutomated","io","positiveResponse","onChangePositive","negativeResponse","onChangeNegative","push","defaultValue","App","productType","positiveReply","negativeReply","onSendSMS","interpolateString","replace","formData","data","customer_name","phone_number","product_type","automated_message","positive_reply","negative_reply","options","body","JSON","stringify","method","headers","Content-Type","Accept","X-CSRFToken","cookies","get","fetch","then","res","status","statusText","json","jsonResponse","catch","err","toString","drawerChildren","forms_CustomerForm","appbar_EmotiveAppBar","drawer_Drawer","conversation_Conversation","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d0039be9.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { IconButton, withTheme } from '@material-ui/core';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nconst styles = {\n  root: {\n      background: \"rgb(73, 144, 226, 1)\",\n      zIndex: 1,\n      height: \"50px\"\n  },\n  logo: {\n      display: \"inline-block\",\n      width: \"95%\",\n      textAlign: \"left\",\n      marginBottom:\"10px\"\n  },\n  icon: {\n      display: \"inline-block\",\n      float: \"right\",\n      width: \"5%\",\n      textAlign: \"right\",\n      marginBottom:\"10px\"\n  }\n}\n\nclass EmotiveAppBar extends React.Component {\n    static propTypes = {\n        children: PropTypes.node,\n        classes: PropTypes.object.isRequired,\n        className: PropTypes.string,\n    };\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        console.log(\"APP BAR\", this.props);\n        let children = [\n            <Toolbar>\n                <div className={classNames(this.props.classes.logo, this.props.className)}>\n                    <img height=\"42\" width=\"42\" src=\"http://emotive.io/assets/img/favicon-white.png\"></img>\n                </div>\n                <div>\n                    <IconButton className={classNames(this.props.classes.icon, this.props.className)}>\n                    <AccountCircle /> \n                    </IconButton>\n                </div>\n                </Toolbar>\n        ]\n        return (\n            <AppBar children={children} className={classNames(this.props.classes.root, this.props.className)}>\n                \n            </AppBar>\n            \n        )\n    }\n}\n\nexport default withStyles(styles)(EmotiveAppBar);","import React from 'react';\nimport {withStyles} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Button from '@material-ui/core/Button';\nimport PhoneIcon from '@material-ui/icons/Phone';\nimport Icon from '@material-ui/core/Icon';\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\nimport PersonIcon from '@material-ui/icons/Person';\n\nconst styles = {\n    form: {\n        paddingLeft: \"10px\"\n    },\n    label: {\n        position: \"relative\",\n        margin: \"10px\",\n        display: \"inline-block\",\n    },\n    label_text: {\n        display: \"inline-block\",\n        marginLeft: \"5px\"\n    },\n    input: {\n        margin: \"10px\",\n        border: \"solid\",\n        borderWidth: \"0.5px\",\n        borderRadius: \"2.5px\",\n        borderColor: \"gray\",\n        paddingLeft: \"5px\"\n    },\n    button_group: {\n        margin: \"10px\",\n        paddingLeft: \"2.5%\",\n        paddingRight: \"2.5%\",\n    },\n    button: {\n        margin: \"10px\",\n        background: \"orange\",\n        color: \"White\",\n        marginLeft: \"32%\",\n        marginRight: \"32%\",\n        borderRadius: \"25px\",\n        cursor: \"pointer\",\n        textTransform: \"none\",\n    },\n    button_selected: {\n        textTransform: \"none\",\n        background: \"lightgreen\",\n        color: \"green\",\n        borderColor: \"green\",\n        \"&:hover\": {\n            background: \"lightgreen\",\n            color: \"green\",\n            borderColor: \"green\"\n        }\n    },\n    button_hover: {\n        textTransform: \"none\",\n        \"&:hover\": {\n            background: \"lightgreen\",\n            color: \"green\",\n            borderColor: \"green\"\n        }\n    },\n    icon: {\n        display: \"inline-block\",\n    }\n}\nclass CustomerForm extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        cookies: PropTypes.object.isRequired,\n        onSubmit: PropTypes.func.isRequired\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            product: null,\n            customerName: null,\n            phoneNumber: null,\n        }\n\n        this.onProductSelect = this.onProductSelect.bind(this);\n        this.onCustomerNameChanged = this.onCustomerNameChanged.bind(this);\n        this.onPhoneNumberChanged = this.onPhoneNumberChanged.bind(this);\n\n    }\n\n    onPhoneNumberChanged(event) {\n        console.log(\"Phone number changed.\");\n        let newState = this.state;\n        newState.phoneNumber = event.target.value;\n        this.setState(newState);\n    }\n\n    onCustomerNameChanged(event) {\n        console.log(\"Customer name changed.\");\n        let newState = this.state;\n        newState.customerName = event.target.value;\n        this.setState(newState);\n    }\n    onProductSelect(event) {\n        let newState = this.state;\n        console.log(event.target.innerText.toLowerCase());\n        newState.product = event.target.innerText.toLowerCase();\n        this.setState(newState);\n    }\n    render() {\n        console.log(this.state);\n        console.log(this.props);\n        let children = [\n            <div>\n            <FormGroup>\n            \n            <InputLabel className={this.props.classes.label} shrink = {true} required = {true}>\n                <Icon>\n                    <PhoneIcon className={this.props.classes.icon} />\n                </Icon>\n                <div style={styles.label_text}>\n                    <b>Customer Phone Number</b>\n                </div>\n                \n            </InputLabel>\n            <Input  onChange = {this.onPhoneNumberChanged} className={this.props.classes.input} disableUnderline={true} id=\"phone_number\" type=\"text\" name=\"phone_number\" placeholder=\"1236202984\">\n            </Input>\n            </FormGroup>\n            </div>\n            ,\n            <div>\n            <FormGroup>\n            <InputLabel className={this.props.classes.label} shrink = {true} required = {true}>\n                <Icon>\n                    <ShoppingBasketIcon className={this.props.classes.icon} />\n                </Icon>\n                <div style={styles.label_text}>\n                    <b>Product Type</b>\n                </div>\n                \n            </InputLabel>\n            <FormGroup row = {true} classes={{\n                root: this.props.classes.button_group\n                }\n            }>\n                <Button disableRipple={true} className={this.state.product == \"lime\" ? this.props.classes.button_selected : this.props.classes.button_hover} variant=\"outlined\" onClick={this.onProductSelect}>Lime</Button>\n                <Button disableRipple={true} className={this.state.product == \"cherry\" ? this.props.classes.button_selected : this.props.classes.button_hover} variant=\"outlined\" onClick={this.onProductSelect}>Cherry</Button>\n                <Button disableRipple={true} className={this.state.product == \"vanilla\" ? this.props.classes.button_selected : this.props.classes.button_hover} variant=\"outlined\" onClick={this.onProductSelect}>Vanilla</Button>\n            </FormGroup>\n            </FormGroup>\n            </div>\n            ,\n            <div>\n            <FormGroup>\n            <InputLabel  className={this.props.classes.label} shrink = {true} required = {true}>\n                <Icon>\n                    <PersonIcon className={this.props.classes.icon} />\n                </Icon>\n                <div style={styles.label_text}>\n                    <b>Customer Name</b>\n                </div>\n                \n            </InputLabel>\n            <Input onChange={this.onCustomerNameChanged} className={this.props.classes.input} disableUnderline={true} id=\"customer_name\" type=\"text\" name=\"customer_name\" placeholder=\"Sarah\">\n            </Input>\n            </FormGroup>\n            </div>\n            ,\n            <Button variant=\"outlined\" className={this.props.classes.button} type=\"submit\">Send SMS</Button>\n            \n            \n        ]\n        return (\n            <form style={styles.form} onSubmit={() => this.props.onSubmit(this.state)}>\n            {children}\n            </form>\n            \n        )\n    }\n}\n\nexport default withStyles(styles)(CustomerForm);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport classNames from 'classnames';\nimport CustomerForm from '../forms/CustomerForm';\nimport {CookiesProvider, withCookies, Cookies} from 'react-cookie';\n\n\nconst drawerWidth = \"25%\";\n\nconst styles = {\n  drawer: {\n    display: 'flex',\n    width: drawerWidth,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    zIndex: 0,\n    paddingTop: \"5%\",\n    boxShadow: \"0px 10px 5px gray\"\n  },\n};\n\nclass EmotiveDrawer extends React.Component {\n    static propTypes = {\n        classes: PropTypes.object.isRequired,\n        children: PropTypes.array.isRequired,\n        cookies: PropTypes.object.isRequired\n    }\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <CookiesProvider>\n                <Drawer open={true} className={classNames(this.props.classes.drawer, this.props.className)} variant=\"permanent\"\n                classes ={\n                    {\n                        paper: this.props.classes.drawerPaper\n                    }\n                }\n                children={this.props.children}>\n                </Drawer>\n            </CookiesProvider>\n            \n        )\n    }\n}\n\n\nexport default withCookies(withStyles(styles)(EmotiveDrawer));","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport SentimentSatisfiedAlt from '@material-ui/icons/SentimentSatisfiedAlt';\nimport Icon from '@material-ui/core/Icon';\nimport { IoMdHappy } from \"react-icons/io\";\nimport { IoMdSad } from \"react-icons/io\";\n\nconst mainStyle = {\n    background: \"white\",\n    color: \"gray\",\n    height: \"350px\"\n}\n\nconst divStyle = {\n    flexGrow: 1,\n    display: \"block\",\n    marginTop: \"10%\",\n    marginLeft: \"30%\",\n    marginRight: \"2.5%\",\n    padding: \"2.5%\",\n    background: \"white\",\n    boxShadow: \"5px 5px 5px gray\",\n    border: \"solid\",\n    borderColor: \"gray\",\n    borderWidth: \"0.5px\"\n}\n\nconst messageStyle = {\n    paddingLeft: \"20px\",\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    paddingRight: \"20px\",\n    borderRadius: \"10px\",\n    boxShadow: \"5px 5px 5px gray\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n    border: \"solid\",\n    borderColor: \"gray\",\n    borderWidth: \"0.5px\"\n}\n\nconst messageTextStyle = {\n    width: \"80%\",\n    display: \"inline-block\",\n    border: \"none\",\n    background: \"white\"\n}\n\nconst messageEditStyle = {\n    width: \"15%\",\n    marginLeft: \"2.5%\",\n    background: \"orange\",\n    color: \"White\",\n    borderRadius: \"25px\"\n}\nclass Conversation extends React.Component {\n    static propTypes = {\n        onChangeAutomated: PropTypes.func.isRequired,\n        onChangePositive: PropTypes.func.isRequired,\n        onChangeNegative: PropTypes.func.isRequired,\n        automatedResponse: PropTypes.string.isRequired,\n        negativeResponse: PropTypes.string.isRequired,\n        positiveResponse: PropTypes.string.isRequired\n    }\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            automatedDisabled: true,\n            positiveDisabled: true,\n            negativeDisabled: true\n        }\n\n        this.editAutomatedResponse = this.editAutomatedResponse.bind(this);\n        this.editNegativeResponse = this.editNegativeResponse.bind(this);\n        this.editPositiveResponse = this.editPositiveResponse.bind(this);\n    }\n\n    editAutomatedResponse() {\n        console.log(\"Automated Response Edited\");\n        let newState = this.state;\n        newState.automatedDisabled = !(newState.automatedDisabled);\n        this.setState(newState);\n    }\n\n    editPositiveResponse() {\n        console.log(\"Positive Response Edited\");\n        let newState = this.state;\n        newState.positiveDisabled = !(newState.positiveDisabled);\n        this.setState(newState);\n    }\n\n    editNegativeResponse() {\n        console.log(\"Negative Response Edited\");\n        let newState = this.state;\n        newState.negativeDisabled = !(newState.negativeDisabled);\n        this.setState(newState);\n    }\n\n\n    render() {\n        console.log(\"State\", this.state);\n        return (\n            <div style={divStyle}>\n            <main style={mainStyle}>\n                <div>\n                    First Automated Message\n                </div>\n                {messageElement({\n                    message: this.props.automatedResponse,\n                    disabled: this.state.automatedDisabled,\n                    buttonCallback: this.editAutomatedResponse,\n                    textareaCallback: this.props.onChangeAutomated\n                })}\n                <div>\n                    If Positive Response\n                    <IoMdHappy />\n                </div>\n                {messageElement({\n                    message: this.props.positiveResponse,\n                    disabled: this.state.positiveDisabled,\n                    buttonCallback: this.editPositiveResponse,\n                    textareaCallback: this.props.onChangePositive\n                })}\n                \n                <div>\n                    If Negative Response\n                    <IoMdSad />\n                </div>\n                {messageElement({\n                    message: this.props.negativeResponse,\n                    disabled: this.state.negativeDisabled,\n                    buttonCallback: this.editNegativeResponse,\n                    textareaCallback: this.props.onChangeNegative\n                })}\n\n                \n            </main>\n            </div>\n            \n        )\n    }\n}\n\nlet messageElement = function(props) {\n    const {message, disabled, buttonCallback, textareaCallback} = props;\n    let children = []\n    if (disabled==true) {\n        children.push(<textarea style = {messageTextStyle} disabled defaultValue={message}>\n            </textarea>)\n    } else {\n        children.push(<textarea style = {messageTextStyle} defaultValue={message} onChange={textareaCallback} >\n            </textarea>)\n    }\n\n    if (disabled === true) {\n        children.push(<Button style = {messageEditStyle} onClick={buttonCallback}>\n            Edit\n        </Button>)\n    } else {\n        children.push(<Button style = {messageEditStyle} onClick={buttonCallback}>\n            Finish\n        </Button>)\n    }\n    return (\n        <div style = {messageStyle}>\n            {children}\n        </div>\n    )\n}\nexport default Conversation;","import React, { Component } from 'react';\n\nimport EmotiveAppBar from './components/appbar/EmotiveAppBar';\nimport Drawer from './components/drawer/Drawer';\nimport './App.css';\nimport Conversation from './components/conversation/Conversation';\nimport {CookiesProvider, withCookies} from 'react-cookie';\nimport PropTypes from 'prop-types';\nimport CustomerForm from './components/forms/CustomerForm';\n\n\nlet smsSendURI = \"/sms_feedback/send_sms/\"\n\nclass App extends Component {\n  static propTypes = {\n    cookie: PropTypes.object.isRequired\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      customerName: null,\n      phoneNumber: null,\n      productType: null,\n      automatedResponse: \"Hi <firstName>! I saw that you received our <productType>! How is it going so far?\",\n      positiveReply: \"Great! Can you describe what you love most about the <productType>?\",\n      negativeReply: \"I'm sorry to hear that! Can you let us know what you disliked about the <productType>?\"\n    }\n\n    this.onChangeAutomated = this.onChangeAutomated.bind(this);\n    this.onChangeNegative = this.onChangeNegative.bind(this);\n    this.onChangePositive = this.onChangePositive.bind(this);\n    this.onSendSMS = this.onSendSMS.bind(this);\n    this.interpolateString = this.interpolateString.bind(this);\n  }\n\n  interpolateString(customerName, productType, message) {\n    return message.replace(\"<firstName>\", customerName).replace(\"<productType>\", productType);\n  }\n  onSendSMS(formData) {\n    let data = {\n      customer_name: formData.customerName,\n      phone_number: formData.phoneNumber,\n      product_type: formData.product,\n      automated_message: this.interpolateString(formData.customerName, formData.product, this.state.automatedResponse),\n      positive_reply: this.interpolateString(formData.customerName, formData.product, this.state.positiveReply),\n      negative_reply: this.interpolateString(formData.customerName, formData.product, this.state.negativeReply)\n    }\n\n    let options = {\n      body: JSON.stringify(data),\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Accept\": \"application/json\",\n        \"X-CSRFToken\": this.props.cookies.get(\"csrftoken\")\n      }\n    }\n\n    fetch(smsSendURI, options).then((res) => {\n      console.log(res.status);\n      console.log(res.statusText);\n      console.log(res.json());\n      return res.json();\n    }).then((jsonResponse) => {\n      console.log(jsonResponse);\n    }).catch((err) => {\n      console.log(err.toString());\n    })\n    console.log(\"Will send\", data);\n    console.log(\"With options\", options);\n  }\n\n  onChangeAutomated(event) {\n    console.log(\"Automated Response Changed.\")\n    let newState = this.state;\n    newState.automatedResponse = event.target.value;\n    this.setState(newState);\n  }\n\n  onChangePositive(event) {\n    console.log(\"Positive Response Changed.\")\n    let newState = this.state;\n    newState.positiveReply = event.target.value;\n    this.setState(newState);\n  }\n\n  onChangeNegative(event) {\n    console.log(\"Negative Response Changed.\")\n    let newState = this.state;\n    newState.negativeReply = event.target.value;\n    this.setState(newState);\n  }\n  render() {\n    console.log(\"APP OUTPUT\", this.props);\n    let drawerChildren = [\n      <CustomerForm onSubmit={this.onSendSMS}></CustomerForm>\n    ]\n    return (\n      <CookiesProvider>\n        <div className=\"App\">\n          <EmotiveAppBar></EmotiveAppBar>\n          <Drawer children={drawerChildren}/>\n          <Conversation onChangeAutomated={this.onChangeAutomated} onChangePositive={this.onChangePositive}\n          onChangeNegative={this.onChangeNegative} automatedResponse={this.state.automatedResponse}\n          negativeResponse={this.state.negativeReply} positiveResponse={this.state.positiveReply}/>\n        </div>\n      </CookiesProvider>\n      \n    );\n  }\n}\n\nexport default withCookies(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}